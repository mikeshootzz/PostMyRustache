name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
            rust_target: aarch64-apple-darwin
            asset_name: postmyrustache-macos-arm.zip
          - target: i686-unknown-linux-gnu
            os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
            asset_name: postmyrustache-linux-x86.zip
          - target: i686-pc-windows-gnu
            os: windows-latest
            rust_target: x86_64-pc-windows-msvc
            asset_name: postmyrustache-windows-x86.zip

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.rust_target }}
          override: true

      - name: Build binary
        run: cargo build --target ${{ matrix.rust_target }} --release

      - name: Archive production artifacts
        run: |
          zip ${{ matrix.asset_name }} target/${{ matrix.rust_target }}/release/postmyrustache*

      - name: Upload artifact for release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset macOS ARM
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./postmyrustache-macos-arm.zip
          asset_name: postmyrustache-macos-arm.zip
          asset_content_type: application/zip

      - name: Upload Release Asset Linux x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./postmyrustache-linux-x86.zip
          asset_name: postmyrustache-linux-x86.zip
          asset_content_type: application/zip

      - name: Upload Release Asset Windows x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./postmyrustache-windows-x86.zip
          asset_name: postmyrustache-windows-x86.zip
          asset_content_type: application/zip
